# единая точка входа для всех контейнеров
version: "3"

# имена сервисов контейнеров
services:
  # для фронтенда для тестов пока собираем дев сборку
  frontend:
    build: ./frontend
    container_name: docker-template-frontend
    command: npm run dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    # чтобы фронтенд не падал и сокеты обновления страницы отрабатывали
    stdin_open: true
    tty: true
    volumes:
      - ./frontend/src:/usr/src/app/src

  # сервис который работает с экспрессом
  api:
    build: ./api
    # даем имя контейнера чтобы при запуске найти именно его
    container_name: docker-template-api
    # запуск сценария из package.json
    command: npm run start
    # всегда перезапускаем контейнер за исключением случаев когда остановлен вручную
    restart: unless-stopped
    # слева наружный порт контейнера справа внутренний порт приложения
    ports:
      - "3001:3001"
    # переменные окружения которые мы можем пробросить внутри контейнера  
    environment:
      - PORT=3001
      - HOST=http://docker-template.ru
      # образец с 'mongodb://127.0.0.1:27017/api' просто локалхос меняем на хос образа монги
      - MONGO_URL=mongodb://db_api:27017/api
    depends_on:
      # запускаем его после запуска образа базы данных монго
      - db_api

  # сервис который работает с базой данных берем готовый образ
  db_api:
    image: mongo:latest
    # даем имя контейнера чтобы при запуске найти именно его
    container_name: docker-template-db-api
    # выносим монгу за пределы контейнера, чтобы при пересборке БД не стиралась (симлинк ссылка)
    volumes:
      - mongodb_api:/data/db

  auth:
    build: ./auth
    container_name: docker-template-auth
    command: npm run start
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - HOST=http://docker-template.ru
      - MONGO_URL=mongodb://db_auth:27017/auth
    depends_on:
      - db_auth

  db_auth:
    image: mongo:latest
    container_name: docker-template-db_auth
    volumes:
      - mongodb_auth:/data/db

volumes:
  # чтобы иметь доступ везде к волюму
  mongodb_api:      
  mongodb_auth:      